name: Release Workflow
on:
  push:
    branches:
      - main

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  id-token: write # to enable use of OIDC for npm provenance
  packages: write
# env:
#   flutter_version: '3.13.6'

jobs:
  release-please:
    name: version-changelog
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: dart
          package-name: release-please-action
          include-v-in-tag: true
      - if: ${{ steps.release.outputs.release_created }}
        run:
          print("tag=${{ steps.release.outputs.tag_name }}")
        shell: python
  publish_flutter_x64_macos:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    env:
      TAG: ${{ needs.release-please.outputs.tag }}
      PRJ_NAME: "BoxInspector"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - id: flutter-action
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # flutter-version: ${{ env.flutter_version }}
          # architecture: arm64
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
      # - run: flutter doctor
      - run: ls
      - run: rm -rf ./node_modules
      - run: npm -v
      - run: npm install
      - run: flutter config --enable-macos-desktop
      - run: npm install
      - run: make build-client-macOS-x64 PRJ_NAME=${{ env.PRJ_NAME }} TAG=${{ env.TAG }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload v${{ env.TAG }} ./dist/${{ env.TAG }}/${{ env.PRJ_NAME }}-${{ env.TAG }}-x64.dmg --clobber
      - run: |
          echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
          echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
          echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
          echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
        shell: bash

  publish_flutter_x64_ubuntu:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    env:
      TAG: ${{ needs.release-please.outputs.tag }}
      PRJ_NAME: "BoxInspector"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: flutter-action
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # flutter-version: ${{ env.flutter_version }}
          # architecture: arm64
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
      # - run: flutter doctor
      - run: ls
      - run: sudo apt-get install clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
      - run: flutter config --enable-linux-desktop
      - run: make build-client-ubuntu-x64 PRJ_NAME=${{ env.PRJ_NAME }} TAG=${{ env.TAG }}
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload v${{ env.TAG }} ./dist/${{ env.TAG }}/${{ env.PRJ_NAME }}-${{ env.TAG }}-x64.deb --clobber
      - run: |
          echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
          echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
          echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
          echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
        shell: bash

  # publish_flutter_x64_windows:
  #   needs: release-please
  #   if: ${{ needs.release-please.outputs.tag }}
  #   env:
  #     TAG: ${{ needs.release-please.outputs.tag }}
  #     PRJ_NAME: "BoxInspector"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - id: flutter-action
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         # flutter-version: ${{ env.flutter_version }}
  #         # architecture: arm64
  #         cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
  #         cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
  #     # - run: flutter doctor
  #     - run: ls
  #     - run: sudo apt-get install clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
  #     - run: flutter config --enable-linux-desktop
  #     - run: make build-client-ubuntu-x64 PRJ_NAME=${{ env.PRJ_NAME }} TAG=${{ env.TAG }}
  #     - env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run:
  #         gh release upload v${{ env.TAG }} ./dist/${{ env.TAG }}/${{ env.PRJ_NAME }}-${{ env.TAG }}-x64.deb
  #     - run: |
  #         echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
  #         echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
  #         echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
  #         echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
  #         echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
  #       shell: bash
